@prefix s-wf: <http://semantic-machines.com/veda/simple-workflow/>.
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>.
@prefix v-wf: <http://www.w3.org/2001/veda-workflow/>.
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#>.
@prefix s-wfc: <http://semantic-machines.com/veda/simple-workflow-cr/>.
@prefix v-s: <http://semantic-machines.com/veda/veda-schema/>.
@prefix xsd: <http://www.w3.org/2001/XMLSchema#>.
@prefix td: <http://semantic-machines.com/veda/test-data/>.
@prefix d: <http://semantic-machines.com/veda/veda-data/>.
@prefix owl: <http://www.w3.org/2002/07/owl#> .

<http://semantic-machines.com/veda/complex-route-template>
  rdf:type owl:Ontology ;
  owl:imports <http://semantic-machines.com/veda/veda-workflow> ;
  rdfs:label "Онтология подсети автопоручений"@ru ;
  rdfs:label "Autoinstruction oute ontology"@en ;
  v-s:loadPriority 21 ;
.

s-wf:subnet_autoinstruction_route a v-wf:Net;
  rdfs:isDefinedBy "http://semantic-machines.com/veda/complex-route-template"^^xsd:string;
  rdfs:label "Подсеть автопоручений"^^xsd:string;
  v-s:updateCounter "3"^^xsd:integer;
  v-wf:consistsOf d:rkqt78slxs4o8z8it6fgf47e, d:task_autoinstruction_subnet_journal,  d:task_autoinstruction_to_release, d:o7ey2dszv23ykoqz5mra9r8o ;
  v-wf:consistsOf d:bt9k3jv4npxhj74qh7bbxq15, d:task_autoinstruction_subnet_journal_hasFlow, d:task_autoinstruction_to_release_link_hasFlow ;
  v-wf:consistsOf d:task_autoinstruction_before_handler, d:task_autoinstruction_before_handler_flow, d:task_autoinstruction_after_handler, d:task_autoinstruction_after_handler_flow;
  v-wf:inputVariable s-wf:var_doc_id, s-wf:var_journal_initiator ;
.
# d:mu18gdzzvp99huwicvj1qkre, d:fszmffnqwfeqxxwr48vi9rq8, d:a33jy1sb1inmegt5j9ncswprh, d:task_autoinstruction_to_release_link

d:rkqt78slxs4o8z8it6fgf47e a v-wf:InputCondition;
  rdfs:isDefinedBy "http://semantic-machines.com/veda/complex-route-template"^^xsd:string;
  v-s:updateCounter "1"^^xsd:integer;
  v-wf:hasFlow d:bt9k3jv4npxhj74qh7bbxq15;
  v-wf:locationX "22"^^xsd:integer;
  v-wf:locationY "256"^^xsd:integer;
.

d:o7ey2dszv23ykoqz5mra9r8o a v-wf:OutputCondition;
  rdfs:isDefinedBy "http://semantic-machines.com/veda/complex-route-template"^^xsd:string;
  v-s:updateCounter "1"^^xsd:integer;
  v-wf:locationX "653"^^xsd:integer;
  v-wf:locationY "262"^^xsd:integer;
.

d:task_autoinstruction_before_handler
    a v-wf:Task;
  rdfs:label "Обработка мероприятия"^^xsd:string;
  v-s:updateCounter "2"^^xsd:integer;
  v-wf:executor d:executor_before_handler;
  v-wf:hasFlow d:task_autoinstruction_before_handler_flow;
  v-wf:join v-wf:None;
  v-wf:locationX "289"^^xsd:integer;
  v-wf:locationY "153"^^xsd:integer;
  v-wf:split v-wf:None; 
.

d:task_autoinstruction_before_handler_flow
    a v-wf:Flow;
  rdfs:label ""^^xsd:string;
  v-wf:predicate "true"^^xsd:string;
  v-wf:flowsInto d:task_autoinstruction_to_release;
.

d:task_autoinstruction_to_release
    a v-wf:Task;
  rdfs:isDefinedBy "http://semantic-machines.com/veda/complex-route-template"^^xsd:string;
  rdfs:label "Выдача задач"^^xsd:string;
  v-s:updateCounter "2"^^xsd:integer;
  v-wf:completedJournalMap s-wf:map_journal_msg_4_task_label_complete, s-wf:map_jrn_ev_type_4_TaskCompleted, s-wf:map_journal_doc_id, s-wf:map_journal_process_id;
  v-wf:completedMapping s-wf:m_result_f_out_var, s-wf:map_decision_of_set_responsible;
  v-wf:executor d:executor_from_activity_responsible1;
  v-wf:hasFlow d:task_autoinstruction_to_release_link_hasFlow;
  v-wf:join v-wf:None;
  v-wf:locationX "400"^^xsd:integer;
  v-wf:locationY "250"^^xsd:integer;
  v-wf:split v-wf:None;
  v-wf:startingMapping d:task_autoinstruction_map_controller, s-wf:map_msg_template_autoinstruction-universal, s-wf:map_doc_id_from_executor, d:task_autoinstraction_decision_for_instruction, d:map_decision_form_type_autoinstruction, d:map_autoinstruction_task_action, s-wf:Autoinstruction_task_date_to, s-wf:map_initiator, d:set_change_status_true;
  #v-wf:subNet s-wf:net_coordination;
	v-wf:subNet s-wf:UniversalNet;    
.

s-wf:Autoinstruction_task_date_to
  rdf:type v-wf:Mapping ;
  v-wf:mapToVariable s-wf:var_actor_task_date_to ;
  v-wf:mappingExpression """
    (veda.Workflow.get_properties_chain ( process.getExecutor(), [{$get:'v-s:count'}]) && veda.Workflow.get_properties_chain ( process.getExecutor(), [{$get:'v-s:count'}])[0])?
  veda.Util.newDate(new Date(new Date().getTime()+(veda.Workflow.get_properties_chain ( process.getExecutor(), [{$get:'v-s:count'}])[0].data*24*60*60*1000))):
  veda.Workflow.get_properties_chain ( process.getExecutor(), [{$get:'v-s:dateToPlan'}]);
  """ ;
.

d:task_autoinstruction_to_release_link_hasFlow
    a v-wf:Flow;
  rdfs:label ""^^xsd:string;
  v-wf:predicate "true"^^xsd:string;
  v-wf:flowsInto d:task_autoinstruction_after_handler;
.

d:task_autoinstruction_after_handler
    a v-wf:Task;
  rdfs:label "Обработка мероприятия"^^xsd:string;
  v-s:updateCounter "2"^^xsd:integer;
  v-wf:executor d:executor_after_handler;
  v-wf:hasFlow d:task_autoinstruction_after_handler_flow;
  v-wf:join v-wf:None;
  v-wf:locationX "502"^^xsd:integer;
  v-wf:locationY "153"^^xsd:integer;
  v-wf:split v-wf:None;
.

d:task_autoinstruction_after_handler_flow
    a v-wf:Flow;
  rdfs:label ""^^xsd:string;
  v-wf:predicate "true"^^xsd:string;
  v-wf:flowsInto d:o7ey2dszv23ykoqz5mra9r8o;
.

d:bt9k3jv4npxhj74qh7bbxq15
    a v-wf:Flow;
  rdfs:isDefinedBy "http://semantic-machines.com/veda/complex-route-template"^^xsd:string;
  rdfs:label ""^^xsd:string;
  v-s:updateCounter "1"^^xsd:integer;
  v-wf:flowsInto d:task_autoinstruction_subnet_journal;
.

d:task_autoinstruction_subnet_journal
    a v-wf:Task;
  rdfs:isDefinedBy "http://semantic-machines.com/veda/complex-route-template"^^xsd:string;
  rdfs:label "Журнал по мероприятиям"^^xsd:string;
  v-s:updateCounter "1"^^xsd:integer;
  v-wf:executor d:executor_subnet_journal;
  v-wf:hasFlow d:task_autoinstruction_subnet_journal_hasFlow;
  v-wf:join v-wf:None;
  v-wf:locationX "187"^^xsd:integer;
  v-wf:locationY "250"^^xsd:integer;
  v-wf:split v-wf:None;
  v-wf:startingMapping s-wf:map_doc_id, d:map_autoinstraction_notification_response;
.

d:task_autoinstruction_subnet_journal_hasFlow
    a v-wf:Flow;
  rdfs:isDefinedBy "http://semantic-machines.com/veda/complex-route-template"^^xsd:string;
  rdfs:label ""^^xsd:string;
  v-s:updateCounter "2"^^xsd:integer;
  v-wf:predicate "true"^^xsd:string;
  v-wf:flowsInto d:task_autoinstruction_before_handler ;
.

###--- дополнительные сущности к сети

d:map_autoinstruction_task_action
  rdf:type v-wf:Mapping ;
  v-wf:mapToVariable s-wf:var_actor_task_action ;
  v-wf:mappingExpression "veda.Util.newStr ('Исполнить поручение')" ;
  rdfs:label "Actor_task_action <- 'Исполнить поручение'"^^xsd:string ;
.

d:set_change_status_true
  rdf:type v-wf:Mapping ;
  v-wf:mapToVariable s-wf:var_set_status ;
  v-wf:mappingExpression  "veda.Util.newBool (true);" ;
.

d:executor_before_handler
  rdf:type v-s:Codelet ;
  v-s:script
  """
  (function() {
    var processId = process.src_data['@'];

    var doc = process.getExecutor();
    print('$$$$ doc:', veda.Util.toJson(doc));
    
    var set_in_doc = {
      '@': doc[0].data,
      'v-wf:isProcess': veda.Util.newUri(process.src_data['@'])
    };
    set_in_individual(task.ticket, set_in_doc);
    return [veda.Workflow.get_new_variable('res', veda.Util.newStr('OK'))];
  }());
  """;
  rdfs:label "Исполнитель для обработки документа"@ru ;
.

d:executor_after_handler
  rdf:type v-wf:ExecutorDefinition ;
  v-wf:executorExpression
  """
  (function() {

    var doc = get_individual(task.ticket, process.getExecutor()[0].data);
    if (doc && veda.Util.hasValue(doc, 'v-wf:isProcess')) {
      delete doc['v-wf:isProcess'];
      put_individual(task.ticket, doc);
    }
    return [veda.Workflow.get_new_variable('res', veda.Util.newStr('OK'))];
  }());
  """;
  rdfs:label "Исполнитель для обработки документа"@ru ;
.

d:executor_autoinstruction_notification_response
  rdf:type v-s:Codelet ;
  v-s:script
  """
  (function () {
    var mer = get_individual(task.ticket, process.getExecutor()[0].data);
    mer['v-wf:takenDecision'] = process.getLocalVariable ('decision_of_set_responsible');
    mer['v-s:dateFact'] = veda.Util.newDate(Date.now());
    put_individual(task.ticket, mer, _event_id);
    return [veda.Workflow.get_new_variable('res', veda.Util.newStr('OK'))];
    }());
  """;
  rdfs:label "Ответ из формы решения пользователя"@ru ;
.

d:executor_from_activity_responsible1
  rdf:type v-wf:ExecutorDefinition ;
  v-wf:executorExpression
  """
  veda.Workflow.get_properties_chain ( process.getExecutor(), [{$get:'v-s:responsible'}])
  """;
  rdfs:label "Исполнители из формы решения пользователя"@ru ;
.

d:task_autoinstruction_map_controller
  rdf:type v-wf:Mapping ;
  v-wf:mapToVariable s-wf:var_controller ;
  v-wf:mappingExpression "veda.Workflow.get_properties_chain ( process.getExecutor(), [{$get:'v-s:controller'}])" ;
.

s-wf:map_msg_template_autoinstruction-universal
  rdf:type v-wf:Mapping ;
  v-wf:mapToVariable s-wf:var_msg_template ;
  v-wf:mappingExpression "veda.Util.newUri ('s-wf:msg-template-universal')";
  rdfs:isDefinedBy s-wf: ;
.

d:task_autoinstraction_decision_for_instruction
  rdf:type v-wf:Mapping ;
  v-wf:mapToVariable s-wf:possible_decision ;
  v-wf:mappingExpression "[veda.Util.newUri ('v-wf:DecisionAchieved'), veda.Util.newUri('v-wf:DecisionRejected'), veda.Util.newUri('v-wf:DecisionNotPerformed'), veda.Util.newUri('v-wf:DecisionProlongate'), veda.Util.newUri('v-wf:DecisionNotForMe')]" ;
  rdfs:label "Варианты ответа для исполнения"^^xsd:string;
.

d:map_decision_form_type_autoinstruction
  rdf:type v-wf:Mapping ;
  v-wf:mapToVariable s-wf:var_decision_form_type ;
  v-wf:mappingExpression "veda.Util.newUri ('s-wf:UserTaskForm')";
  rdfs:label "Map decision_form_type = veda.Util.newUri ('s-wf:UserTaskForm')"@ru ;
.

d:map_autoinstraction_to_date
  rdf:type v-wf:Mapping ;
  v-wf:mapToVariable s-wf:var_actor_task_date_to ;
  v-wf:mappingExpression "veda.Workflow.get_properties_chain (process.getExecutor(), [{$get:'v-s:dateToPlan'}])" ;
  rdfs:label "Контрольный срок"^^xsd:string ;
.

d:map_autoinstraction_notification_response
  rdf:type v-wf:Mapping ;
  v-wf:mapToVariable s-wf:var_result ;
  v-wf:mappingExpression "process.getInputVariable ('decision_of_set_responsible')" ;
  rdfs:label "Контрольный срок"^^xsd:string ;
.

d:map_transformation_setStatusExecution1
  rdf:type v-wf:Mapping ;
  v-wf:mapToVariable s-wf:transformation_uri ;
  v-wf:mappingExpression "veda.Util.newUri('mnd-s:set_StatusExecution')" ;
.

d:map_transformation_setStatusExecuted1
  rdf:type v-wf:Mapping ;
  v-wf:mapToVariable s-wf:transformation_uri ;
  v-wf:mappingExpression "veda.Util.newUri('mnd-s:set_StatusExecuted')" ;
.

d:map_transformation_setStatusRejected1
  rdf:type v-wf:Mapping ;
  v-wf:mapToVariable s-wf:transformation_uri ;
  v-wf:mappingExpression "veda.Util.newUri('mnd-s:set_StatusRejected')" ;
.
